[transmogrifier]
pipeline =
    jsonsource
    logger
    skipper
    pathfixer
#    splitter
    content_type_mapper
    comment_constructor
    removeid
    constructor
    copyuid
    deserializer
    schemaupdater
    featuredimage
    workflowhistory
    savepoint

[splitter]
blueprint = collective.transmogrifier.sections.splitter
pipeline-content-condition = python:item['_type'] != 'Discussion Item'
pipeline-content = 
    content_type_mapper
    comment_constructor
    removeid
    constructor
    copyuid
    deserializer
    schemaupdater
    featuredimage
    workflowhistory
    savepoint
pipeline-comment-condition = python:item['_type'] == 'Discussion Item'
pipeline-comment =
    comment_constructor
    
    
[jsonsource]
blueprint = collective.jsonmigrator.jsonsource
path = content-import

[logger]
blueprint = collective.transmogrifier.sections.logger
name = Transmogrifier [importing]
level = INFO
key = _path

[skipper]
blueprint = rfaplone4to5.skipper

[pathfixer]
blueprint = plone.app.transmogrifier.pathfixer
path-key = _path
stripstring = /rfa/subsites

[content_type_mapper]
blueprint = rfaplone4to5.content_type_mapper

[comment_constructor]
blueprint = rfaplone4to5.comment_constructor

[debugger]
blueprint = collective.transmogrifier.sections.breakpoint
condition = python:True

[removeid]
blueprint = collective.transmogrifier.sections.manipulator
delete = id

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[copyuid]
blueprint = collective.transmogrifier.sections.manipulator
keys =
    _uid
destination = string:plone.uuid

[deserializer]
blueprint = transmogrify.dexterity.deserializer

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[featuredimage]
blueprint = rfaplone4to5.featuredimage_setter

[workflowhistory]
blueprint = collective.jsonmigrator.workflowhistory

[savepoint]
blueprint = collective.jsonmigrator.partialcommit
every = 1000
